-- main_system.vhd

-- Generated using ACDS version 18.1 625

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity main_system is
	port (
		clk_clk                               : in    std_logic                     := '0';             --                               clk.clk
		custom_counter_0_interrupt_sender_irq : out   std_logic;                                        -- custom_counter_0_interrupt_sender.irq
		parallel_port_leds_export             : out   std_logic_vector(9 downto 0);                     --                parallel_port_leds.export
		pll_clk_sdram_clk                     : out   std_logic;                                        --                     pll_clk_sdram.clk
		reset_reset_n                         : in    std_logic                     := '0';             --                             reset.reset_n
		sdram_controller_wire_addr            : out   std_logic_vector(12 downto 0);                    --             sdram_controller_wire.addr
		sdram_controller_wire_ba              : out   std_logic_vector(1 downto 0);                     --                                  .ba
		sdram_controller_wire_cas_n           : out   std_logic;                                        --                                  .cas_n
		sdram_controller_wire_cke             : out   std_logic;                                        --                                  .cke
		sdram_controller_wire_cs_n            : out   std_logic;                                        --                                  .cs_n
		sdram_controller_wire_dq              : inout std_logic_vector(15 downto 0) := (others => '0'); --                                  .dq
		sdram_controller_wire_dqm             : out   std_logic_vector(1 downto 0);                     --                                  .dqm
		sdram_controller_wire_ras_n           : out   std_logic;                                        --                                  .ras_n
		sdram_controller_wire_we_n            : out   std_logic                                         --                                  .we_n
	);
end entity main_system;

architecture rtl of main_system is
	component main_system_CPU_0_0 is
		port (
			clk_clk                      : in  std_logic                     := 'X';             -- clk
			cpu_0_outgoing_waitrequest   : in  std_logic                     := 'X';             -- waitrequest
			cpu_0_outgoing_readdata      : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			cpu_0_outgoing_readdatavalid : in  std_logic                     := 'X';             -- readdatavalid
			cpu_0_outgoing_burstcount    : out std_logic_vector(0 downto 0);                     -- burstcount
			cpu_0_outgoing_writedata     : out std_logic_vector(31 downto 0);                    -- writedata
			cpu_0_outgoing_address       : out std_logic_vector(27 downto 0);                    -- address
			cpu_0_outgoing_write         : out std_logic;                                        -- write
			cpu_0_outgoing_read          : out std_logic;                                        -- read
			cpu_0_outgoing_byteenable    : out std_logic_vector(3 downto 0);                     -- byteenable
			cpu_0_outgoing_debugaccess   : out std_logic;                                        -- debugaccess
			reset_reset_n                : in  std_logic                     := 'X'              -- reset_n
		);
	end component main_system_CPU_0_0;

	component main_system_CPU_1_0 is
		port (
			clk_clk                      : in  std_logic                     := 'X';             -- clk
			cpu_1_outgoing_waitrequest   : in  std_logic                     := 'X';             -- waitrequest
			cpu_1_outgoing_readdata      : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			cpu_1_outgoing_readdatavalid : in  std_logic                     := 'X';             -- readdatavalid
			cpu_1_outgoing_burstcount    : out std_logic_vector(0 downto 0);                     -- burstcount
			cpu_1_outgoing_writedata     : out std_logic_vector(31 downto 0);                    -- writedata
			cpu_1_outgoing_address       : out std_logic_vector(27 downto 0);                    -- address
			cpu_1_outgoing_write         : out std_logic;                                        -- write
			cpu_1_outgoing_read          : out std_logic;                                        -- read
			cpu_1_outgoing_byteenable    : out std_logic_vector(3 downto 0);                     -- byteenable
			cpu_1_outgoing_debugaccess   : out std_logic;                                        -- debugaccess
			reset_reset_n                : in  std_logic                     := 'X'              -- reset_n
		);
	end component main_system_CPU_1_0;

	component Counter is
		port (
			Clk         : in  std_logic                     := 'X';             -- clk
			Address     : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- address
			ChipSelect  : in  std_logic                     := 'X';             -- chipselect
			Read        : in  std_logic                     := 'X';             -- read
			Write       : in  std_logic                     := 'X';             -- write
			ReadData    : out std_logic_vector(31 downto 0);                    -- readdata
			WriteData   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			nReset      : in  std_logic                     := 'X';             -- reset_n
			IRQ         : out std_logic;                                        -- irq
			Address2    : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- address
			ChipSelect2 : in  std_logic                     := 'X';             -- chipselect
			Read2       : in  std_logic                     := 'X';             -- read
			ReadData2   : out std_logic_vector(31 downto 0);                    -- readdata
			Write2      : in  std_logic                     := 'X';             -- write
			WriteData2  : in  std_logic_vector(31 downto 0) := (others => 'X')  -- writedata
		);
	end component Counter;

	component altera_avalon_mailbox is
		generic (
			DWIDTH : integer := 32;
			AWIDTH : integer := 2
		);
		port (
			clk                  : in  std_logic                     := 'X';             -- clk
			rst_n                : in  std_logic                     := 'X';             -- reset_n
			avmm_snd_address     : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			avmm_snd_writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			avmm_snd_write       : in  std_logic                     := 'X';             -- write
			avmm_snd_read        : in  std_logic                     := 'X';             -- read
			avmm_snd_readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			avmm_snd_waitrequest : out std_logic;                                        -- waitrequest
			irq_msg              : out std_logic;                                        -- irq
			avmm_rcv_address     : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			avmm_rcv_read        : in  std_logic                     := 'X';             -- read
			avmm_rcv_writedata   : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			avmm_rcv_write       : in  std_logic                     := 'X';             -- write
			avmm_rcv_readdata    : out std_logic_vector(31 downto 0);                    -- readdata
			irq_space            : out std_logic                                         -- irq
		);
	end component altera_avalon_mailbox;

	component main_system_mutex_0 is
		port (
			reset_n       : in  std_logic                     := 'X';             -- reset_n
			clk           : in  std_logic                     := 'X';             -- clk
			chipselect    : in  std_logic                     := 'X';             -- chipselect
			data_from_cpu : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			read          : in  std_logic                     := 'X';             -- read
			write         : in  std_logic                     := 'X';             -- write
			data_to_cpu   : out std_logic_vector(31 downto 0);                    -- readdata
			address       : in  std_logic                     := 'X'              -- address
		);
	end component main_system_mutex_0;

	component main_system_pio_0 is
		port (
			clk        : in  std_logic                     := 'X';             -- clk
			reset_n    : in  std_logic                     := 'X';             -- reset_n
			address    : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- address
			write_n    : in  std_logic                     := 'X';             -- write_n
			writedata  : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			chipselect : in  std_logic                     := 'X';             -- chipselect
			readdata   : out std_logic_vector(31 downto 0);                    -- readdata
			out_port   : out std_logic_vector(9 downto 0)                      -- export
		);
	end component main_system_pio_0;

	component main_system_pll_0 is
		port (
			refclk   : in  std_logic := 'X'; -- clk
			rst      : in  std_logic := 'X'; -- reset
			outclk_0 : out std_logic;        -- clk
			outclk_1 : out std_logic;        -- clk
			outclk_2 : out std_logic;        -- clk
			locked   : out std_logic         -- export
		);
	end component main_system_pll_0;

	component main_system_sdram_controller is
		port (
			clk            : in    std_logic                     := 'X';             -- clk
			reset_n        : in    std_logic                     := 'X';             -- reset_n
			az_addr        : in    std_logic_vector(24 downto 0) := (others => 'X'); -- address
			az_be_n        : in    std_logic_vector(1 downto 0)  := (others => 'X'); -- byteenable_n
			az_cs          : in    std_logic                     := 'X';             -- chipselect
			az_data        : in    std_logic_vector(15 downto 0) := (others => 'X'); -- writedata
			az_rd_n        : in    std_logic                     := 'X';             -- read_n
			az_wr_n        : in    std_logic                     := 'X';             -- write_n
			za_data        : out   std_logic_vector(15 downto 0);                    -- readdata
			za_valid       : out   std_logic;                                        -- readdatavalid
			za_waitrequest : out   std_logic;                                        -- waitrequest
			zs_addr        : out   std_logic_vector(12 downto 0);                    -- export
			zs_ba          : out   std_logic_vector(1 downto 0);                     -- export
			zs_cas_n       : out   std_logic;                                        -- export
			zs_cke         : out   std_logic;                                        -- export
			zs_cs_n        : out   std_logic;                                        -- export
			zs_dq          : inout std_logic_vector(15 downto 0) := (others => 'X'); -- export
			zs_dqm         : out   std_logic_vector(1 downto 0);                     -- export
			zs_ras_n       : out   std_logic;                                        -- export
			zs_we_n        : out   std_logic                                         -- export
		);
	end component main_system_sdram_controller;

	component main_system_sysid_qsys_0 is
		port (
			clock    : in  std_logic                     := 'X'; -- clk
			reset_n  : in  std_logic                     := 'X'; -- reset_n
			readdata : out std_logic_vector(31 downto 0);        -- readdata
			address  : in  std_logic                     := 'X'  -- address
		);
	end component main_system_sysid_qsys_0;

	component main_system_mm_interconnect_0 is
		port (
			pll_0_outclk0_clk                                       : in  std_logic                     := 'X';             -- clk
			pll_0_outclk1_clk                                       : in  std_logic                     := 'X';             -- clk
			CPU_0_0_reset_reset_bridge_in_reset_reset               : in  std_logic                     := 'X';             -- reset
			custom_counter_0_reset_sink_reset_bridge_in_reset_reset : in  std_logic                     := 'X';             -- reset
			sdram_controller_reset_reset_bridge_in_reset_reset      : in  std_logic                     := 'X';             -- reset
			CPU_0_0_cpu_0_outgoing_address                          : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			CPU_0_0_cpu_0_outgoing_waitrequest                      : out std_logic;                                        -- waitrequest
			CPU_0_0_cpu_0_outgoing_burstcount                       : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- burstcount
			CPU_0_0_cpu_0_outgoing_byteenable                       : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			CPU_0_0_cpu_0_outgoing_read                             : in  std_logic                     := 'X';             -- read
			CPU_0_0_cpu_0_outgoing_readdata                         : out std_logic_vector(31 downto 0);                    -- readdata
			CPU_0_0_cpu_0_outgoing_readdatavalid                    : out std_logic;                                        -- readdatavalid
			CPU_0_0_cpu_0_outgoing_write                            : in  std_logic                     := 'X';             -- write
			CPU_0_0_cpu_0_outgoing_writedata                        : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			CPU_0_0_cpu_0_outgoing_debugaccess                      : in  std_logic                     := 'X';             -- debugaccess
			CPU_1_0_cpu_1_outgoing_address                          : in  std_logic_vector(27 downto 0) := (others => 'X'); -- address
			CPU_1_0_cpu_1_outgoing_waitrequest                      : out std_logic;                                        -- waitrequest
			CPU_1_0_cpu_1_outgoing_burstcount                       : in  std_logic_vector(0 downto 0)  := (others => 'X'); -- burstcount
			CPU_1_0_cpu_1_outgoing_byteenable                       : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- byteenable
			CPU_1_0_cpu_1_outgoing_read                             : in  std_logic                     := 'X';             -- read
			CPU_1_0_cpu_1_outgoing_readdata                         : out std_logic_vector(31 downto 0);                    -- readdata
			CPU_1_0_cpu_1_outgoing_readdatavalid                    : out std_logic;                                        -- readdatavalid
			CPU_1_0_cpu_1_outgoing_write                            : in  std_logic                     := 'X';             -- write
			CPU_1_0_cpu_1_outgoing_writedata                        : in  std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			CPU_1_0_cpu_1_outgoing_debugaccess                      : in  std_logic                     := 'X';             -- debugaccess
			custom_counter_0_avalon_slave_0_address                 : out std_logic_vector(2 downto 0);                     -- address
			custom_counter_0_avalon_slave_0_write                   : out std_logic;                                        -- write
			custom_counter_0_avalon_slave_0_read                    : out std_logic;                                        -- read
			custom_counter_0_avalon_slave_0_readdata                : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			custom_counter_0_avalon_slave_0_writedata               : out std_logic_vector(31 downto 0);                    -- writedata
			custom_counter_0_avalon_slave_0_chipselect              : out std_logic;                                        -- chipselect
			custom_counter_0_avalon_slave_1_address                 : out std_logic_vector(2 downto 0);                     -- address
			custom_counter_0_avalon_slave_1_write                   : out std_logic;                                        -- write
			custom_counter_0_avalon_slave_1_read                    : out std_logic;                                        -- read
			custom_counter_0_avalon_slave_1_readdata                : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			custom_counter_0_avalon_slave_1_writedata               : out std_logic_vector(31 downto 0);                    -- writedata
			custom_counter_0_avalon_slave_1_chipselect              : out std_logic;                                        -- chipselect
			mailbox_simple_0_avmm_msg_receiver_address              : out std_logic_vector(1 downto 0);                     -- address
			mailbox_simple_0_avmm_msg_receiver_write                : out std_logic;                                        -- write
			mailbox_simple_0_avmm_msg_receiver_read                 : out std_logic;                                        -- read
			mailbox_simple_0_avmm_msg_receiver_readdata             : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mailbox_simple_0_avmm_msg_receiver_writedata            : out std_logic_vector(31 downto 0);                    -- writedata
			mailbox_simple_0_avmm_msg_sender_address                : out std_logic_vector(1 downto 0);                     -- address
			mailbox_simple_0_avmm_msg_sender_write                  : out std_logic;                                        -- write
			mailbox_simple_0_avmm_msg_sender_read                   : out std_logic;                                        -- read
			mailbox_simple_0_avmm_msg_sender_readdata               : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mailbox_simple_0_avmm_msg_sender_writedata              : out std_logic_vector(31 downto 0);                    -- writedata
			mailbox_simple_0_avmm_msg_sender_waitrequest            : in  std_logic                     := 'X';             -- waitrequest
			mutex_0_s1_address                                      : out std_logic_vector(0 downto 0);                     -- address
			mutex_0_s1_write                                        : out std_logic;                                        -- write
			mutex_0_s1_read                                         : out std_logic;                                        -- read
			mutex_0_s1_readdata                                     : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			mutex_0_s1_writedata                                    : out std_logic_vector(31 downto 0);                    -- writedata
			mutex_0_s1_chipselect                                   : out std_logic;                                        -- chipselect
			pio_0_s1_address                                        : out std_logic_vector(1 downto 0);                     -- address
			pio_0_s1_write                                          : out std_logic;                                        -- write
			pio_0_s1_readdata                                       : in  std_logic_vector(31 downto 0) := (others => 'X'); -- readdata
			pio_0_s1_writedata                                      : out std_logic_vector(31 downto 0);                    -- writedata
			pio_0_s1_chipselect                                     : out std_logic;                                        -- chipselect
			sdram_controller_s1_address                             : out std_logic_vector(24 downto 0);                    -- address
			sdram_controller_s1_write                               : out std_logic;                                        -- write
			sdram_controller_s1_read                                : out std_logic;                                        -- read
			sdram_controller_s1_readdata                            : in  std_logic_vector(15 downto 0) := (others => 'X'); -- readdata
			sdram_controller_s1_writedata                           : out std_logic_vector(15 downto 0);                    -- writedata
			sdram_controller_s1_byteenable                          : out std_logic_vector(1 downto 0);                     -- byteenable
			sdram_controller_s1_readdatavalid                       : in  std_logic                     := 'X';             -- readdatavalid
			sdram_controller_s1_waitrequest                         : in  std_logic                     := 'X';             -- waitrequest
			sdram_controller_s1_chipselect                          : out std_logic;                                        -- chipselect
			sysid_qsys_0_control_slave_address                      : out std_logic_vector(0 downto 0);                     -- address
			sysid_qsys_0_control_slave_readdata                     : in  std_logic_vector(31 downto 0) := (others => 'X')  -- readdata
		);
	end component main_system_mm_interconnect_0;

	component altera_reset_controller is
		generic (
			NUM_RESET_INPUTS          : integer := 6;
			OUTPUT_RESET_SYNC_EDGES   : string  := "deassert";
			SYNC_DEPTH                : integer := 2;
			RESET_REQUEST_PRESENT     : integer := 0;
			RESET_REQ_WAIT_TIME       : integer := 1;
			MIN_RST_ASSERTION_TIME    : integer := 3;
			RESET_REQ_EARLY_DSRT_TIME : integer := 1;
			USE_RESET_REQUEST_IN0     : integer := 0;
			USE_RESET_REQUEST_IN1     : integer := 0;
			USE_RESET_REQUEST_IN2     : integer := 0;
			USE_RESET_REQUEST_IN3     : integer := 0;
			USE_RESET_REQUEST_IN4     : integer := 0;
			USE_RESET_REQUEST_IN5     : integer := 0;
			USE_RESET_REQUEST_IN6     : integer := 0;
			USE_RESET_REQUEST_IN7     : integer := 0;
			USE_RESET_REQUEST_IN8     : integer := 0;
			USE_RESET_REQUEST_IN9     : integer := 0;
			USE_RESET_REQUEST_IN10    : integer := 0;
			USE_RESET_REQUEST_IN11    : integer := 0;
			USE_RESET_REQUEST_IN12    : integer := 0;
			USE_RESET_REQUEST_IN13    : integer := 0;
			USE_RESET_REQUEST_IN14    : integer := 0;
			USE_RESET_REQUEST_IN15    : integer := 0;
			ADAPT_RESET_REQUEST       : integer := 0
		);
		port (
			reset_in0      : in  std_logic := 'X'; -- reset
			clk            : in  std_logic := 'X'; -- clk
			reset_out      : out std_logic;        -- reset
			reset_req      : out std_logic;        -- reset_req
			reset_req_in0  : in  std_logic := 'X'; -- reset_req
			reset_in1      : in  std_logic := 'X'; -- reset
			reset_req_in1  : in  std_logic := 'X'; -- reset_req
			reset_in2      : in  std_logic := 'X'; -- reset
			reset_req_in2  : in  std_logic := 'X'; -- reset_req
			reset_in3      : in  std_logic := 'X'; -- reset
			reset_req_in3  : in  std_logic := 'X'; -- reset_req
			reset_in4      : in  std_logic := 'X'; -- reset
			reset_req_in4  : in  std_logic := 'X'; -- reset_req
			reset_in5      : in  std_logic := 'X'; -- reset
			reset_req_in5  : in  std_logic := 'X'; -- reset_req
			reset_in6      : in  std_logic := 'X'; -- reset
			reset_req_in6  : in  std_logic := 'X'; -- reset_req
			reset_in7      : in  std_logic := 'X'; -- reset
			reset_req_in7  : in  std_logic := 'X'; -- reset_req
			reset_in8      : in  std_logic := 'X'; -- reset
			reset_req_in8  : in  std_logic := 'X'; -- reset_req
			reset_in9      : in  std_logic := 'X'; -- reset
			reset_req_in9  : in  std_logic := 'X'; -- reset_req
			reset_in10     : in  std_logic := 'X'; -- reset
			reset_req_in10 : in  std_logic := 'X'; -- reset_req
			reset_in11     : in  std_logic := 'X'; -- reset
			reset_req_in11 : in  std_logic := 'X'; -- reset_req
			reset_in12     : in  std_logic := 'X'; -- reset
			reset_req_in12 : in  std_logic := 'X'; -- reset_req
			reset_in13     : in  std_logic := 'X'; -- reset
			reset_req_in13 : in  std_logic := 'X'; -- reset_req
			reset_in14     : in  std_logic := 'X'; -- reset
			reset_req_in14 : in  std_logic := 'X'; -- reset_req
			reset_in15     : in  std_logic := 'X'; -- reset
			reset_req_in15 : in  std_logic := 'X'  -- reset_req
		);
	end component altera_reset_controller;

	signal pll_0_outclk0_clk                                              : std_logic;                     -- pll_0:outclk_0 -> [CPU_0_0:clk_clk, CPU_1_0:clk_clk, custom_counter_0:Clk, mailbox_simple_0:clk, mm_interconnect_0:pll_0_outclk0_clk, mutex_0:clk, pio_0:clk, rst_controller:clk, sysid_qsys_0:clock]
	signal pll_0_outclk1_clk                                              : std_logic;                     -- pll_0:outclk_1 -> [mm_interconnect_0:pll_0_outclk1_clk, rst_controller_001:clk, sdram_controller:clk]
	signal cpu_0_0_cpu_0_outgoing_waitrequest                             : std_logic;                     -- mm_interconnect_0:CPU_0_0_cpu_0_outgoing_waitrequest -> CPU_0_0:cpu_0_outgoing_waitrequest
	signal cpu_0_0_cpu_0_outgoing_readdata                                : std_logic_vector(31 downto 0); -- mm_interconnect_0:CPU_0_0_cpu_0_outgoing_readdata -> CPU_0_0:cpu_0_outgoing_readdata
	signal cpu_0_0_cpu_0_outgoing_debugaccess                             : std_logic;                     -- CPU_0_0:cpu_0_outgoing_debugaccess -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_debugaccess
	signal cpu_0_0_cpu_0_outgoing_address                                 : std_logic_vector(27 downto 0); -- CPU_0_0:cpu_0_outgoing_address -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_address
	signal cpu_0_0_cpu_0_outgoing_read                                    : std_logic;                     -- CPU_0_0:cpu_0_outgoing_read -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_read
	signal cpu_0_0_cpu_0_outgoing_byteenable                              : std_logic_vector(3 downto 0);  -- CPU_0_0:cpu_0_outgoing_byteenable -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_byteenable
	signal cpu_0_0_cpu_0_outgoing_readdatavalid                           : std_logic;                     -- mm_interconnect_0:CPU_0_0_cpu_0_outgoing_readdatavalid -> CPU_0_0:cpu_0_outgoing_readdatavalid
	signal cpu_0_0_cpu_0_outgoing_writedata                               : std_logic_vector(31 downto 0); -- CPU_0_0:cpu_0_outgoing_writedata -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_writedata
	signal cpu_0_0_cpu_0_outgoing_write                                   : std_logic;                     -- CPU_0_0:cpu_0_outgoing_write -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_write
	signal cpu_0_0_cpu_0_outgoing_burstcount                              : std_logic_vector(0 downto 0);  -- CPU_0_0:cpu_0_outgoing_burstcount -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_burstcount
	signal cpu_1_0_cpu_1_outgoing_waitrequest                             : std_logic;                     -- mm_interconnect_0:CPU_1_0_cpu_1_outgoing_waitrequest -> CPU_1_0:cpu_1_outgoing_waitrequest
	signal cpu_1_0_cpu_1_outgoing_readdata                                : std_logic_vector(31 downto 0); -- mm_interconnect_0:CPU_1_0_cpu_1_outgoing_readdata -> CPU_1_0:cpu_1_outgoing_readdata
	signal cpu_1_0_cpu_1_outgoing_debugaccess                             : std_logic;                     -- CPU_1_0:cpu_1_outgoing_debugaccess -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_debugaccess
	signal cpu_1_0_cpu_1_outgoing_address                                 : std_logic_vector(27 downto 0); -- CPU_1_0:cpu_1_outgoing_address -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_address
	signal cpu_1_0_cpu_1_outgoing_read                                    : std_logic;                     -- CPU_1_0:cpu_1_outgoing_read -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_read
	signal cpu_1_0_cpu_1_outgoing_byteenable                              : std_logic_vector(3 downto 0);  -- CPU_1_0:cpu_1_outgoing_byteenable -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_byteenable
	signal cpu_1_0_cpu_1_outgoing_readdatavalid                           : std_logic;                     -- mm_interconnect_0:CPU_1_0_cpu_1_outgoing_readdatavalid -> CPU_1_0:cpu_1_outgoing_readdatavalid
	signal cpu_1_0_cpu_1_outgoing_writedata                               : std_logic_vector(31 downto 0); -- CPU_1_0:cpu_1_outgoing_writedata -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_writedata
	signal cpu_1_0_cpu_1_outgoing_write                                   : std_logic;                     -- CPU_1_0:cpu_1_outgoing_write -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_write
	signal cpu_1_0_cpu_1_outgoing_burstcount                              : std_logic_vector(0 downto 0);  -- CPU_1_0:cpu_1_outgoing_burstcount -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_burstcount
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_chipselect   : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_0_chipselect -> custom_counter_0:ChipSelect
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata     : std_logic_vector(31 downto 0); -- custom_counter_0:ReadData -> mm_interconnect_0:custom_counter_0_avalon_slave_0_readdata
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_address      : std_logic_vector(2 downto 0);  -- mm_interconnect_0:custom_counter_0_avalon_slave_0_address -> custom_counter_0:Address
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_read         : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_0_read -> custom_counter_0:Read
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_write        : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_0_write -> custom_counter_0:Write
	signal mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata    : std_logic_vector(31 downto 0); -- mm_interconnect_0:custom_counter_0_avalon_slave_0_writedata -> custom_counter_0:WriteData
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata    : std_logic_vector(31 downto 0); -- mailbox_simple_0:avmm_snd_readdata -> mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_readdata
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest : std_logic;                     -- mailbox_simple_0:avmm_snd_waitrequest -> mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_waitrequest
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address     : std_logic_vector(1 downto 0);  -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_address -> mailbox_simple_0:avmm_snd_address
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read        : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_read -> mailbox_simple_0:avmm_snd_read
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write       : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_write -> mailbox_simple_0:avmm_snd_write
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata   : std_logic_vector(31 downto 0); -- mm_interconnect_0:mailbox_simple_0_avmm_msg_sender_writedata -> mailbox_simple_0:avmm_snd_writedata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_readdata          : std_logic_vector(31 downto 0); -- sysid_qsys_0:readdata -> mm_interconnect_0:sysid_qsys_0_control_slave_readdata
	signal mm_interconnect_0_sysid_qsys_0_control_slave_address           : std_logic_vector(0 downto 0);  -- mm_interconnect_0:sysid_qsys_0_control_slave_address -> sysid_qsys_0:address
	signal mm_interconnect_0_sdram_controller_s1_chipselect               : std_logic;                     -- mm_interconnect_0:sdram_controller_s1_chipselect -> sdram_controller:az_cs
	signal mm_interconnect_0_sdram_controller_s1_readdata                 : std_logic_vector(15 downto 0); -- sdram_controller:za_data -> mm_interconnect_0:sdram_controller_s1_readdata
	signal mm_interconnect_0_sdram_controller_s1_waitrequest              : std_logic;                     -- sdram_controller:za_waitrequest -> mm_interconnect_0:sdram_controller_s1_waitrequest
	signal mm_interconnect_0_sdram_controller_s1_address                  : std_logic_vector(24 downto 0); -- mm_interconnect_0:sdram_controller_s1_address -> sdram_controller:az_addr
	signal mm_interconnect_0_sdram_controller_s1_read                     : std_logic;                     -- mm_interconnect_0:sdram_controller_s1_read -> mm_interconnect_0_sdram_controller_s1_read:in
	signal mm_interconnect_0_sdram_controller_s1_byteenable               : std_logic_vector(1 downto 0);  -- mm_interconnect_0:sdram_controller_s1_byteenable -> mm_interconnect_0_sdram_controller_s1_byteenable:in
	signal mm_interconnect_0_sdram_controller_s1_readdatavalid            : std_logic;                     -- sdram_controller:za_valid -> mm_interconnect_0:sdram_controller_s1_readdatavalid
	signal mm_interconnect_0_sdram_controller_s1_write                    : std_logic;                     -- mm_interconnect_0:sdram_controller_s1_write -> mm_interconnect_0_sdram_controller_s1_write:in
	signal mm_interconnect_0_sdram_controller_s1_writedata                : std_logic_vector(15 downto 0); -- mm_interconnect_0:sdram_controller_s1_writedata -> sdram_controller:az_data
	signal mm_interconnect_0_pio_0_s1_chipselect                          : std_logic;                     -- mm_interconnect_0:pio_0_s1_chipselect -> pio_0:chipselect
	signal mm_interconnect_0_pio_0_s1_readdata                            : std_logic_vector(31 downto 0); -- pio_0:readdata -> mm_interconnect_0:pio_0_s1_readdata
	signal mm_interconnect_0_pio_0_s1_address                             : std_logic_vector(1 downto 0);  -- mm_interconnect_0:pio_0_s1_address -> pio_0:address
	signal mm_interconnect_0_pio_0_s1_write                               : std_logic;                     -- mm_interconnect_0:pio_0_s1_write -> mm_interconnect_0_pio_0_s1_write:in
	signal mm_interconnect_0_pio_0_s1_writedata                           : std_logic_vector(31 downto 0); -- mm_interconnect_0:pio_0_s1_writedata -> pio_0:writedata
	signal mm_interconnect_0_mutex_0_s1_chipselect                        : std_logic;                     -- mm_interconnect_0:mutex_0_s1_chipselect -> mutex_0:chipselect
	signal mm_interconnect_0_mutex_0_s1_readdata                          : std_logic_vector(31 downto 0); -- mutex_0:data_to_cpu -> mm_interconnect_0:mutex_0_s1_readdata
	signal mm_interconnect_0_mutex_0_s1_address                           : std_logic_vector(0 downto 0);  -- mm_interconnect_0:mutex_0_s1_address -> mutex_0:address
	signal mm_interconnect_0_mutex_0_s1_read                              : std_logic;                     -- mm_interconnect_0:mutex_0_s1_read -> mutex_0:read
	signal mm_interconnect_0_mutex_0_s1_write                             : std_logic;                     -- mm_interconnect_0:mutex_0_s1_write -> mutex_0:write
	signal mm_interconnect_0_mutex_0_s1_writedata                         : std_logic_vector(31 downto 0); -- mm_interconnect_0:mutex_0_s1_writedata -> mutex_0:data_from_cpu
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_chipselect   : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_1_chipselect -> custom_counter_0:ChipSelect2
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_readdata     : std_logic_vector(31 downto 0); -- custom_counter_0:ReadData2 -> mm_interconnect_0:custom_counter_0_avalon_slave_1_readdata
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_address      : std_logic_vector(2 downto 0);  -- mm_interconnect_0:custom_counter_0_avalon_slave_1_address -> custom_counter_0:Address2
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_read         : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_1_read -> custom_counter_0:Read2
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_write        : std_logic;                     -- mm_interconnect_0:custom_counter_0_avalon_slave_1_write -> custom_counter_0:Write2
	signal mm_interconnect_0_custom_counter_0_avalon_slave_1_writedata    : std_logic_vector(31 downto 0); -- mm_interconnect_0:custom_counter_0_avalon_slave_1_writedata -> custom_counter_0:WriteData2
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata  : std_logic_vector(31 downto 0); -- mailbox_simple_0:avmm_rcv_readdata -> mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_readdata
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address   : std_logic_vector(1 downto 0);  -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_address -> mailbox_simple_0:avmm_rcv_address
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read      : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_read -> mailbox_simple_0:avmm_rcv_read
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write     : std_logic;                     -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_write -> mailbox_simple_0:avmm_rcv_write
	signal mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata : std_logic_vector(31 downto 0); -- mm_interconnect_0:mailbox_simple_0_avmm_msg_receiver_writedata -> mailbox_simple_0:avmm_rcv_writedata
	signal rst_controller_reset_out_reset                                 : std_logic;                     -- rst_controller:reset_out -> [mm_interconnect_0:CPU_0_0_reset_reset_bridge_in_reset_reset, mm_interconnect_0:custom_counter_0_reset_sink_reset_bridge_in_reset_reset, rst_controller_reset_out_reset:in]
	signal rst_controller_001_reset_out_reset                             : std_logic;                     -- rst_controller_001:reset_out -> [mm_interconnect_0:sdram_controller_reset_reset_bridge_in_reset_reset, rst_controller_001_reset_out_reset:in]
	signal reset_reset_n_ports_inv                                        : std_logic;                     -- reset_reset_n:inv -> [pll_0:rst, rst_controller:reset_in0, rst_controller_001:reset_in0]
	signal mm_interconnect_0_sdram_controller_s1_read_ports_inv           : std_logic;                     -- mm_interconnect_0_sdram_controller_s1_read:inv -> sdram_controller:az_rd_n
	signal mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv     : std_logic_vector(1 downto 0);  -- mm_interconnect_0_sdram_controller_s1_byteenable:inv -> sdram_controller:az_be_n
	signal mm_interconnect_0_sdram_controller_s1_write_ports_inv          : std_logic;                     -- mm_interconnect_0_sdram_controller_s1_write:inv -> sdram_controller:az_wr_n
	signal mm_interconnect_0_pio_0_s1_write_ports_inv                     : std_logic;                     -- mm_interconnect_0_pio_0_s1_write:inv -> pio_0:write_n
	signal rst_controller_reset_out_reset_ports_inv                       : std_logic;                     -- rst_controller_reset_out_reset:inv -> [custom_counter_0:nReset, mailbox_simple_0:rst_n, mutex_0:reset_n, pio_0:reset_n, sysid_qsys_0:reset_n]
	signal rst_controller_001_reset_out_reset_ports_inv                   : std_logic;                     -- rst_controller_001_reset_out_reset:inv -> sdram_controller:reset_n

begin

	cpu_0_0 : component main_system_CPU_0_0
		port map (
			clk_clk                      => pll_0_outclk0_clk,                    --            clk.clk
			cpu_0_outgoing_waitrequest   => cpu_0_0_cpu_0_outgoing_waitrequest,   -- cpu_0_outgoing.waitrequest
			cpu_0_outgoing_readdata      => cpu_0_0_cpu_0_outgoing_readdata,      --               .readdata
			cpu_0_outgoing_readdatavalid => cpu_0_0_cpu_0_outgoing_readdatavalid, --               .readdatavalid
			cpu_0_outgoing_burstcount    => cpu_0_0_cpu_0_outgoing_burstcount,    --               .burstcount
			cpu_0_outgoing_writedata     => cpu_0_0_cpu_0_outgoing_writedata,     --               .writedata
			cpu_0_outgoing_address       => cpu_0_0_cpu_0_outgoing_address,       --               .address
			cpu_0_outgoing_write         => cpu_0_0_cpu_0_outgoing_write,         --               .write
			cpu_0_outgoing_read          => cpu_0_0_cpu_0_outgoing_read,          --               .read
			cpu_0_outgoing_byteenable    => cpu_0_0_cpu_0_outgoing_byteenable,    --               .byteenable
			cpu_0_outgoing_debugaccess   => cpu_0_0_cpu_0_outgoing_debugaccess,   --               .debugaccess
			reset_reset_n                => reset_reset_n                         --          reset.reset_n
		);

	cpu_1_0 : component main_system_CPU_1_0
		port map (
			clk_clk                      => pll_0_outclk0_clk,                    --            clk.clk
			cpu_1_outgoing_waitrequest   => cpu_1_0_cpu_1_outgoing_waitrequest,   -- cpu_1_outgoing.waitrequest
			cpu_1_outgoing_readdata      => cpu_1_0_cpu_1_outgoing_readdata,      --               .readdata
			cpu_1_outgoing_readdatavalid => cpu_1_0_cpu_1_outgoing_readdatavalid, --               .readdatavalid
			cpu_1_outgoing_burstcount    => cpu_1_0_cpu_1_outgoing_burstcount,    --               .burstcount
			cpu_1_outgoing_writedata     => cpu_1_0_cpu_1_outgoing_writedata,     --               .writedata
			cpu_1_outgoing_address       => cpu_1_0_cpu_1_outgoing_address,       --               .address
			cpu_1_outgoing_write         => cpu_1_0_cpu_1_outgoing_write,         --               .write
			cpu_1_outgoing_read          => cpu_1_0_cpu_1_outgoing_read,          --               .read
			cpu_1_outgoing_byteenable    => cpu_1_0_cpu_1_outgoing_byteenable,    --               .byteenable
			cpu_1_outgoing_debugaccess   => cpu_1_0_cpu_1_outgoing_debugaccess,   --               .debugaccess
			reset_reset_n                => reset_reset_n                         --          reset.reset_n
		);

	custom_counter_0 : component Counter
		port map (
			Clk         => pll_0_outclk0_clk,                                            --            clock.clk
			Address     => mm_interconnect_0_custom_counter_0_avalon_slave_0_address,    --   avalon_slave_0.address
			ChipSelect  => mm_interconnect_0_custom_counter_0_avalon_slave_0_chipselect, --                 .chipselect
			Read        => mm_interconnect_0_custom_counter_0_avalon_slave_0_read,       --                 .read
			Write       => mm_interconnect_0_custom_counter_0_avalon_slave_0_write,      --                 .write
			ReadData    => mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata,   --                 .readdata
			WriteData   => mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata,  --                 .writedata
			nReset      => rst_controller_reset_out_reset_ports_inv,                     --       reset_sink.reset_n
			IRQ         => custom_counter_0_interrupt_sender_irq,                        -- interrupt_sender.irq
			Address2    => mm_interconnect_0_custom_counter_0_avalon_slave_1_address,    --   avalon_slave_1.address
			ChipSelect2 => mm_interconnect_0_custom_counter_0_avalon_slave_1_chipselect, --                 .chipselect
			Read2       => mm_interconnect_0_custom_counter_0_avalon_slave_1_read,       --                 .read
			ReadData2   => mm_interconnect_0_custom_counter_0_avalon_slave_1_readdata,   --                 .readdata
			Write2      => mm_interconnect_0_custom_counter_0_avalon_slave_1_write,      --                 .write
			WriteData2  => mm_interconnect_0_custom_counter_0_avalon_slave_1_writedata   --                 .writedata
		);

	mailbox_simple_0 : component altera_avalon_mailbox
		generic map (
			DWIDTH => 32,
			AWIDTH => 2
		)
		port map (
			clk                  => pll_0_outclk0_clk,                                              --                   clk.clk
			rst_n                => rst_controller_reset_out_reset_ports_inv,                       --                 rst_n.reset_n
			avmm_snd_address     => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address,     --       avmm_msg_sender.address
			avmm_snd_writedata   => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata,   --                      .writedata
			avmm_snd_write       => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write,       --                      .write
			avmm_snd_read        => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read,        --                      .read
			avmm_snd_readdata    => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata,    --                      .readdata
			avmm_snd_waitrequest => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest, --                      .waitrequest
			irq_msg              => open,                                                           -- interrupt_msg_pending.irq
			avmm_rcv_address     => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address,   --     avmm_msg_receiver.address
			avmm_rcv_read        => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read,      --                      .read
			avmm_rcv_writedata   => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata, --                      .writedata
			avmm_rcv_write       => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write,     --                      .write
			avmm_rcv_readdata    => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata,  --                      .readdata
			irq_space            => open                                                            --           (terminated)
		);

	mutex_0 : component main_system_mutex_0
		port map (
			reset_n       => rst_controller_reset_out_reset_ports_inv, -- reset.reset_n
			clk           => pll_0_outclk0_clk,                        --   clk.clk
			chipselect    => mm_interconnect_0_mutex_0_s1_chipselect,  --    s1.chipselect
			data_from_cpu => mm_interconnect_0_mutex_0_s1_writedata,   --      .writedata
			read          => mm_interconnect_0_mutex_0_s1_read,        --      .read
			write         => mm_interconnect_0_mutex_0_s1_write,       --      .write
			data_to_cpu   => mm_interconnect_0_mutex_0_s1_readdata,    --      .readdata
			address       => mm_interconnect_0_mutex_0_s1_address(0)   --      .address
		);

	pio_0 : component main_system_pio_0
		port map (
			clk        => pll_0_outclk0_clk,                          --                 clk.clk
			reset_n    => rst_controller_reset_out_reset_ports_inv,   --               reset.reset_n
			address    => mm_interconnect_0_pio_0_s1_address,         --                  s1.address
			write_n    => mm_interconnect_0_pio_0_s1_write_ports_inv, --                    .write_n
			writedata  => mm_interconnect_0_pio_0_s1_writedata,       --                    .writedata
			chipselect => mm_interconnect_0_pio_0_s1_chipselect,      --                    .chipselect
			readdata   => mm_interconnect_0_pio_0_s1_readdata,        --                    .readdata
			out_port   => parallel_port_leds_export                   -- external_connection.export
		);

	pll_0 : component main_system_pll_0
		port map (
			refclk   => clk_clk,                 --  refclk.clk
			rst      => reset_reset_n_ports_inv, --   reset.reset
			outclk_0 => pll_0_outclk0_clk,       -- outclk0.clk
			outclk_1 => pll_0_outclk1_clk,       -- outclk1.clk
			outclk_2 => pll_clk_sdram_clk,       -- outclk2.clk
			locked   => open                     -- (terminated)
		);

	sdram_controller : component main_system_sdram_controller
		port map (
			clk            => pll_0_outclk1_clk,                                          --   clk.clk
			reset_n        => rst_controller_001_reset_out_reset_ports_inv,               -- reset.reset_n
			az_addr        => mm_interconnect_0_sdram_controller_s1_address,              --    s1.address
			az_be_n        => mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv, --      .byteenable_n
			az_cs          => mm_interconnect_0_sdram_controller_s1_chipselect,           --      .chipselect
			az_data        => mm_interconnect_0_sdram_controller_s1_writedata,            --      .writedata
			az_rd_n        => mm_interconnect_0_sdram_controller_s1_read_ports_inv,       --      .read_n
			az_wr_n        => mm_interconnect_0_sdram_controller_s1_write_ports_inv,      --      .write_n
			za_data        => mm_interconnect_0_sdram_controller_s1_readdata,             --      .readdata
			za_valid       => mm_interconnect_0_sdram_controller_s1_readdatavalid,        --      .readdatavalid
			za_waitrequest => mm_interconnect_0_sdram_controller_s1_waitrequest,          --      .waitrequest
			zs_addr        => sdram_controller_wire_addr,                                 --  wire.export
			zs_ba          => sdram_controller_wire_ba,                                   --      .export
			zs_cas_n       => sdram_controller_wire_cas_n,                                --      .export
			zs_cke         => sdram_controller_wire_cke,                                  --      .export
			zs_cs_n        => sdram_controller_wire_cs_n,                                 --      .export
			zs_dq          => sdram_controller_wire_dq,                                   --      .export
			zs_dqm         => sdram_controller_wire_dqm,                                  --      .export
			zs_ras_n       => sdram_controller_wire_ras_n,                                --      .export
			zs_we_n        => sdram_controller_wire_we_n                                  --      .export
		);

	sysid_qsys_0 : component main_system_sysid_qsys_0
		port map (
			clock    => pll_0_outclk0_clk,                                       --           clk.clk
			reset_n  => rst_controller_reset_out_reset_ports_inv,                --         reset.reset_n
			readdata => mm_interconnect_0_sysid_qsys_0_control_slave_readdata,   -- control_slave.readdata
			address  => mm_interconnect_0_sysid_qsys_0_control_slave_address(0)  --              .address
		);

	mm_interconnect_0 : component main_system_mm_interconnect_0
		port map (
			pll_0_outclk0_clk                                       => pll_0_outclk0_clk,                                              --                                     pll_0_outclk0.clk
			pll_0_outclk1_clk                                       => pll_0_outclk1_clk,                                              --                                     pll_0_outclk1.clk
			CPU_0_0_reset_reset_bridge_in_reset_reset               => rst_controller_reset_out_reset,                                 --               CPU_0_0_reset_reset_bridge_in_reset.reset
			custom_counter_0_reset_sink_reset_bridge_in_reset_reset => rst_controller_reset_out_reset,                                 -- custom_counter_0_reset_sink_reset_bridge_in_reset.reset
			sdram_controller_reset_reset_bridge_in_reset_reset      => rst_controller_001_reset_out_reset,                             --      sdram_controller_reset_reset_bridge_in_reset.reset
			CPU_0_0_cpu_0_outgoing_address                          => cpu_0_0_cpu_0_outgoing_address,                                 --                            CPU_0_0_cpu_0_outgoing.address
			CPU_0_0_cpu_0_outgoing_waitrequest                      => cpu_0_0_cpu_0_outgoing_waitrequest,                             --                                                  .waitrequest
			CPU_0_0_cpu_0_outgoing_burstcount                       => cpu_0_0_cpu_0_outgoing_burstcount,                              --                                                  .burstcount
			CPU_0_0_cpu_0_outgoing_byteenable                       => cpu_0_0_cpu_0_outgoing_byteenable,                              --                                                  .byteenable
			CPU_0_0_cpu_0_outgoing_read                             => cpu_0_0_cpu_0_outgoing_read,                                    --                                                  .read
			CPU_0_0_cpu_0_outgoing_readdata                         => cpu_0_0_cpu_0_outgoing_readdata,                                --                                                  .readdata
			CPU_0_0_cpu_0_outgoing_readdatavalid                    => cpu_0_0_cpu_0_outgoing_readdatavalid,                           --                                                  .readdatavalid
			CPU_0_0_cpu_0_outgoing_write                            => cpu_0_0_cpu_0_outgoing_write,                                   --                                                  .write
			CPU_0_0_cpu_0_outgoing_writedata                        => cpu_0_0_cpu_0_outgoing_writedata,                               --                                                  .writedata
			CPU_0_0_cpu_0_outgoing_debugaccess                      => cpu_0_0_cpu_0_outgoing_debugaccess,                             --                                                  .debugaccess
			CPU_1_0_cpu_1_outgoing_address                          => cpu_1_0_cpu_1_outgoing_address,                                 --                            CPU_1_0_cpu_1_outgoing.address
			CPU_1_0_cpu_1_outgoing_waitrequest                      => cpu_1_0_cpu_1_outgoing_waitrequest,                             --                                                  .waitrequest
			CPU_1_0_cpu_1_outgoing_burstcount                       => cpu_1_0_cpu_1_outgoing_burstcount,                              --                                                  .burstcount
			CPU_1_0_cpu_1_outgoing_byteenable                       => cpu_1_0_cpu_1_outgoing_byteenable,                              --                                                  .byteenable
			CPU_1_0_cpu_1_outgoing_read                             => cpu_1_0_cpu_1_outgoing_read,                                    --                                                  .read
			CPU_1_0_cpu_1_outgoing_readdata                         => cpu_1_0_cpu_1_outgoing_readdata,                                --                                                  .readdata
			CPU_1_0_cpu_1_outgoing_readdatavalid                    => cpu_1_0_cpu_1_outgoing_readdatavalid,                           --                                                  .readdatavalid
			CPU_1_0_cpu_1_outgoing_write                            => cpu_1_0_cpu_1_outgoing_write,                                   --                                                  .write
			CPU_1_0_cpu_1_outgoing_writedata                        => cpu_1_0_cpu_1_outgoing_writedata,                               --                                                  .writedata
			CPU_1_0_cpu_1_outgoing_debugaccess                      => cpu_1_0_cpu_1_outgoing_debugaccess,                             --                                                  .debugaccess
			custom_counter_0_avalon_slave_0_address                 => mm_interconnect_0_custom_counter_0_avalon_slave_0_address,      --                   custom_counter_0_avalon_slave_0.address
			custom_counter_0_avalon_slave_0_write                   => mm_interconnect_0_custom_counter_0_avalon_slave_0_write,        --                                                  .write
			custom_counter_0_avalon_slave_0_read                    => mm_interconnect_0_custom_counter_0_avalon_slave_0_read,         --                                                  .read
			custom_counter_0_avalon_slave_0_readdata                => mm_interconnect_0_custom_counter_0_avalon_slave_0_readdata,     --                                                  .readdata
			custom_counter_0_avalon_slave_0_writedata               => mm_interconnect_0_custom_counter_0_avalon_slave_0_writedata,    --                                                  .writedata
			custom_counter_0_avalon_slave_0_chipselect              => mm_interconnect_0_custom_counter_0_avalon_slave_0_chipselect,   --                                                  .chipselect
			custom_counter_0_avalon_slave_1_address                 => mm_interconnect_0_custom_counter_0_avalon_slave_1_address,      --                   custom_counter_0_avalon_slave_1.address
			custom_counter_0_avalon_slave_1_write                   => mm_interconnect_0_custom_counter_0_avalon_slave_1_write,        --                                                  .write
			custom_counter_0_avalon_slave_1_read                    => mm_interconnect_0_custom_counter_0_avalon_slave_1_read,         --                                                  .read
			custom_counter_0_avalon_slave_1_readdata                => mm_interconnect_0_custom_counter_0_avalon_slave_1_readdata,     --                                                  .readdata
			custom_counter_0_avalon_slave_1_writedata               => mm_interconnect_0_custom_counter_0_avalon_slave_1_writedata,    --                                                  .writedata
			custom_counter_0_avalon_slave_1_chipselect              => mm_interconnect_0_custom_counter_0_avalon_slave_1_chipselect,   --                                                  .chipselect
			mailbox_simple_0_avmm_msg_receiver_address              => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_address,   --                mailbox_simple_0_avmm_msg_receiver.address
			mailbox_simple_0_avmm_msg_receiver_write                => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_write,     --                                                  .write
			mailbox_simple_0_avmm_msg_receiver_read                 => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_read,      --                                                  .read
			mailbox_simple_0_avmm_msg_receiver_readdata             => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_readdata,  --                                                  .readdata
			mailbox_simple_0_avmm_msg_receiver_writedata            => mm_interconnect_0_mailbox_simple_0_avmm_msg_receiver_writedata, --                                                  .writedata
			mailbox_simple_0_avmm_msg_sender_address                => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_address,     --                  mailbox_simple_0_avmm_msg_sender.address
			mailbox_simple_0_avmm_msg_sender_write                  => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_write,       --                                                  .write
			mailbox_simple_0_avmm_msg_sender_read                   => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_read,        --                                                  .read
			mailbox_simple_0_avmm_msg_sender_readdata               => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_readdata,    --                                                  .readdata
			mailbox_simple_0_avmm_msg_sender_writedata              => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_writedata,   --                                                  .writedata
			mailbox_simple_0_avmm_msg_sender_waitrequest            => mm_interconnect_0_mailbox_simple_0_avmm_msg_sender_waitrequest, --                                                  .waitrequest
			mutex_0_s1_address                                      => mm_interconnect_0_mutex_0_s1_address,                           --                                        mutex_0_s1.address
			mutex_0_s1_write                                        => mm_interconnect_0_mutex_0_s1_write,                             --                                                  .write
			mutex_0_s1_read                                         => mm_interconnect_0_mutex_0_s1_read,                              --                                                  .read
			mutex_0_s1_readdata                                     => mm_interconnect_0_mutex_0_s1_readdata,                          --                                                  .readdata
			mutex_0_s1_writedata                                    => mm_interconnect_0_mutex_0_s1_writedata,                         --                                                  .writedata
			mutex_0_s1_chipselect                                   => mm_interconnect_0_mutex_0_s1_chipselect,                        --                                                  .chipselect
			pio_0_s1_address                                        => mm_interconnect_0_pio_0_s1_address,                             --                                          pio_0_s1.address
			pio_0_s1_write                                          => mm_interconnect_0_pio_0_s1_write,                               --                                                  .write
			pio_0_s1_readdata                                       => mm_interconnect_0_pio_0_s1_readdata,                            --                                                  .readdata
			pio_0_s1_writedata                                      => mm_interconnect_0_pio_0_s1_writedata,                           --                                                  .writedata
			pio_0_s1_chipselect                                     => mm_interconnect_0_pio_0_s1_chipselect,                          --                                                  .chipselect
			sdram_controller_s1_address                             => mm_interconnect_0_sdram_controller_s1_address,                  --                               sdram_controller_s1.address
			sdram_controller_s1_write                               => mm_interconnect_0_sdram_controller_s1_write,                    --                                                  .write
			sdram_controller_s1_read                                => mm_interconnect_0_sdram_controller_s1_read,                     --                                                  .read
			sdram_controller_s1_readdata                            => mm_interconnect_0_sdram_controller_s1_readdata,                 --                                                  .readdata
			sdram_controller_s1_writedata                           => mm_interconnect_0_sdram_controller_s1_writedata,                --                                                  .writedata
			sdram_controller_s1_byteenable                          => mm_interconnect_0_sdram_controller_s1_byteenable,               --                                                  .byteenable
			sdram_controller_s1_readdatavalid                       => mm_interconnect_0_sdram_controller_s1_readdatavalid,            --                                                  .readdatavalid
			sdram_controller_s1_waitrequest                         => mm_interconnect_0_sdram_controller_s1_waitrequest,              --                                                  .waitrequest
			sdram_controller_s1_chipselect                          => mm_interconnect_0_sdram_controller_s1_chipselect,               --                                                  .chipselect
			sysid_qsys_0_control_slave_address                      => mm_interconnect_0_sysid_qsys_0_control_slave_address,           --                        sysid_qsys_0_control_slave.address
			sysid_qsys_0_control_slave_readdata                     => mm_interconnect_0_sysid_qsys_0_control_slave_readdata           --                                                  .readdata
		);

	rst_controller : component altera_reset_controller
		generic map (
			NUM_RESET_INPUTS          => 1,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,        -- reset_in0.reset
			clk            => pll_0_outclk0_clk,              --       clk.clk
			reset_out      => rst_controller_reset_out_reset, -- reset_out.reset
			reset_req      => open,                           -- (terminated)
			reset_req_in0  => '0',                            -- (terminated)
			reset_in1      => '0',                            -- (terminated)
			reset_req_in1  => '0',                            -- (terminated)
			reset_in2      => '0',                            -- (terminated)
			reset_req_in2  => '0',                            -- (terminated)
			reset_in3      => '0',                            -- (terminated)
			reset_req_in3  => '0',                            -- (terminated)
			reset_in4      => '0',                            -- (terminated)
			reset_req_in4  => '0',                            -- (terminated)
			reset_in5      => '0',                            -- (terminated)
			reset_req_in5  => '0',                            -- (terminated)
			reset_in6      => '0',                            -- (terminated)
			reset_req_in6  => '0',                            -- (terminated)
			reset_in7      => '0',                            -- (terminated)
			reset_req_in7  => '0',                            -- (terminated)
			reset_in8      => '0',                            -- (terminated)
			reset_req_in8  => '0',                            -- (terminated)
			reset_in9      => '0',                            -- (terminated)
			reset_req_in9  => '0',                            -- (terminated)
			reset_in10     => '0',                            -- (terminated)
			reset_req_in10 => '0',                            -- (terminated)
			reset_in11     => '0',                            -- (terminated)
			reset_req_in11 => '0',                            -- (terminated)
			reset_in12     => '0',                            -- (terminated)
			reset_req_in12 => '0',                            -- (terminated)
			reset_in13     => '0',                            -- (terminated)
			reset_req_in13 => '0',                            -- (terminated)
			reset_in14     => '0',                            -- (terminated)
			reset_req_in14 => '0',                            -- (terminated)
			reset_in15     => '0',                            -- (terminated)
			reset_req_in15 => '0'                             -- (terminated)
		);

	rst_controller_001 : component altera_reset_controller
		generic map (
			NUM_RESET_INPUTS          => 1,
			OUTPUT_RESET_SYNC_EDGES   => "deassert",
			SYNC_DEPTH                => 2,
			RESET_REQUEST_PRESENT     => 0,
			RESET_REQ_WAIT_TIME       => 1,
			MIN_RST_ASSERTION_TIME    => 3,
			RESET_REQ_EARLY_DSRT_TIME => 1,
			USE_RESET_REQUEST_IN0     => 0,
			USE_RESET_REQUEST_IN1     => 0,
			USE_RESET_REQUEST_IN2     => 0,
			USE_RESET_REQUEST_IN3     => 0,
			USE_RESET_REQUEST_IN4     => 0,
			USE_RESET_REQUEST_IN5     => 0,
			USE_RESET_REQUEST_IN6     => 0,
			USE_RESET_REQUEST_IN7     => 0,
			USE_RESET_REQUEST_IN8     => 0,
			USE_RESET_REQUEST_IN9     => 0,
			USE_RESET_REQUEST_IN10    => 0,
			USE_RESET_REQUEST_IN11    => 0,
			USE_RESET_REQUEST_IN12    => 0,
			USE_RESET_REQUEST_IN13    => 0,
			USE_RESET_REQUEST_IN14    => 0,
			USE_RESET_REQUEST_IN15    => 0,
			ADAPT_RESET_REQUEST       => 0
		)
		port map (
			reset_in0      => reset_reset_n_ports_inv,            -- reset_in0.reset
			clk            => pll_0_outclk1_clk,                  --       clk.clk
			reset_out      => rst_controller_001_reset_out_reset, -- reset_out.reset
			reset_req      => open,                               -- (terminated)
			reset_req_in0  => '0',                                -- (terminated)
			reset_in1      => '0',                                -- (terminated)
			reset_req_in1  => '0',                                -- (terminated)
			reset_in2      => '0',                                -- (terminated)
			reset_req_in2  => '0',                                -- (terminated)
			reset_in3      => '0',                                -- (terminated)
			reset_req_in3  => '0',                                -- (terminated)
			reset_in4      => '0',                                -- (terminated)
			reset_req_in4  => '0',                                -- (terminated)
			reset_in5      => '0',                                -- (terminated)
			reset_req_in5  => '0',                                -- (terminated)
			reset_in6      => '0',                                -- (terminated)
			reset_req_in6  => '0',                                -- (terminated)
			reset_in7      => '0',                                -- (terminated)
			reset_req_in7  => '0',                                -- (terminated)
			reset_in8      => '0',                                -- (terminated)
			reset_req_in8  => '0',                                -- (terminated)
			reset_in9      => '0',                                -- (terminated)
			reset_req_in9  => '0',                                -- (terminated)
			reset_in10     => '0',                                -- (terminated)
			reset_req_in10 => '0',                                -- (terminated)
			reset_in11     => '0',                                -- (terminated)
			reset_req_in11 => '0',                                -- (terminated)
			reset_in12     => '0',                                -- (terminated)
			reset_req_in12 => '0',                                -- (terminated)
			reset_in13     => '0',                                -- (terminated)
			reset_req_in13 => '0',                                -- (terminated)
			reset_in14     => '0',                                -- (terminated)
			reset_req_in14 => '0',                                -- (terminated)
			reset_in15     => '0',                                -- (terminated)
			reset_req_in15 => '0'                                 -- (terminated)
		);

	reset_reset_n_ports_inv <= not reset_reset_n;

	mm_interconnect_0_sdram_controller_s1_read_ports_inv <= not mm_interconnect_0_sdram_controller_s1_read;

	mm_interconnect_0_sdram_controller_s1_byteenable_ports_inv <= not mm_interconnect_0_sdram_controller_s1_byteenable;

	mm_interconnect_0_sdram_controller_s1_write_ports_inv <= not mm_interconnect_0_sdram_controller_s1_write;

	mm_interconnect_0_pio_0_s1_write_ports_inv <= not mm_interconnect_0_pio_0_s1_write;

	rst_controller_reset_out_reset_ports_inv <= not rst_controller_reset_out_reset;

	rst_controller_001_reset_out_reset_ports_inv <= not rst_controller_001_reset_out_reset;

end architecture rtl; -- of main_system
