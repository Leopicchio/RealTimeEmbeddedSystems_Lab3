// main_system.v

// Generated using ACDS version 18.0 614

`timescale 1 ps / 1 ps
module main_system (
		input  wire        clk_clk,                     //                   clk.clk
		output wire [9:0]  parallel_port_leds_export,   //    parallel_port_leds.export
		output wire        pll_clk_sdram_clk,           //         pll_clk_sdram.clk
		input  wire        reset_reset_n,               //                 reset.reset_n
		output wire [12:0] sdram_controller_wire_addr,  // sdram_controller_wire.addr
		output wire [1:0]  sdram_controller_wire_ba,    //                      .ba
		output wire        sdram_controller_wire_cas_n, //                      .cas_n
		output wire        sdram_controller_wire_cke,   //                      .cke
		output wire        sdram_controller_wire_cs_n,  //                      .cs_n
		inout  wire [15:0] sdram_controller_wire_dq,    //                      .dq
		output wire [1:0]  sdram_controller_wire_dqm,   //                      .dqm
		output wire        sdram_controller_wire_ras_n, //                      .ras_n
		output wire        sdram_controller_wire_we_n   //                      .we_n
	);

	wire         pll_0_outclk0_clk;                                     // pll_0:outclk_0 -> [CPU_0_0:clk_clk, CPU_1_0:clk_clk, mm_interconnect_0:pll_0_outclk0_clk, mutex_0:clk, pio_0:clk, rst_controller:clk, sysid_qsys_0:clock]
	wire         pll_0_outclk1_clk;                                     // pll_0:outclk_1 -> [mm_interconnect_0:pll_0_outclk1_clk, rst_controller_001:clk, sdram_controller:clk]
	wire         cpu_0_0_cpu_0_outgoing_waitrequest;                    // mm_interconnect_0:CPU_0_0_cpu_0_outgoing_waitrequest -> CPU_0_0:cpu_0_outgoing_waitrequest
	wire  [31:0] cpu_0_0_cpu_0_outgoing_readdata;                       // mm_interconnect_0:CPU_0_0_cpu_0_outgoing_readdata -> CPU_0_0:cpu_0_outgoing_readdata
	wire         cpu_0_0_cpu_0_outgoing_debugaccess;                    // CPU_0_0:cpu_0_outgoing_debugaccess -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_debugaccess
	wire  [27:0] cpu_0_0_cpu_0_outgoing_address;                        // CPU_0_0:cpu_0_outgoing_address -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_address
	wire         cpu_0_0_cpu_0_outgoing_read;                           // CPU_0_0:cpu_0_outgoing_read -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_read
	wire   [3:0] cpu_0_0_cpu_0_outgoing_byteenable;                     // CPU_0_0:cpu_0_outgoing_byteenable -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_byteenable
	wire         cpu_0_0_cpu_0_outgoing_readdatavalid;                  // mm_interconnect_0:CPU_0_0_cpu_0_outgoing_readdatavalid -> CPU_0_0:cpu_0_outgoing_readdatavalid
	wire  [31:0] cpu_0_0_cpu_0_outgoing_writedata;                      // CPU_0_0:cpu_0_outgoing_writedata -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_writedata
	wire         cpu_0_0_cpu_0_outgoing_write;                          // CPU_0_0:cpu_0_outgoing_write -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_write
	wire   [0:0] cpu_0_0_cpu_0_outgoing_burstcount;                     // CPU_0_0:cpu_0_outgoing_burstcount -> mm_interconnect_0:CPU_0_0_cpu_0_outgoing_burstcount
	wire         cpu_1_0_cpu_1_outgoing_waitrequest;                    // mm_interconnect_0:CPU_1_0_cpu_1_outgoing_waitrequest -> CPU_1_0:cpu_1_outgoing_waitrequest
	wire  [31:0] cpu_1_0_cpu_1_outgoing_readdata;                       // mm_interconnect_0:CPU_1_0_cpu_1_outgoing_readdata -> CPU_1_0:cpu_1_outgoing_readdata
	wire         cpu_1_0_cpu_1_outgoing_debugaccess;                    // CPU_1_0:cpu_1_outgoing_debugaccess -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_debugaccess
	wire  [27:0] cpu_1_0_cpu_1_outgoing_address;                        // CPU_1_0:cpu_1_outgoing_address -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_address
	wire         cpu_1_0_cpu_1_outgoing_read;                           // CPU_1_0:cpu_1_outgoing_read -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_read
	wire   [3:0] cpu_1_0_cpu_1_outgoing_byteenable;                     // CPU_1_0:cpu_1_outgoing_byteenable -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_byteenable
	wire         cpu_1_0_cpu_1_outgoing_readdatavalid;                  // mm_interconnect_0:CPU_1_0_cpu_1_outgoing_readdatavalid -> CPU_1_0:cpu_1_outgoing_readdatavalid
	wire  [31:0] cpu_1_0_cpu_1_outgoing_writedata;                      // CPU_1_0:cpu_1_outgoing_writedata -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_writedata
	wire         cpu_1_0_cpu_1_outgoing_write;                          // CPU_1_0:cpu_1_outgoing_write -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_write
	wire   [0:0] cpu_1_0_cpu_1_outgoing_burstcount;                     // CPU_1_0:cpu_1_outgoing_burstcount -> mm_interconnect_0:CPU_1_0_cpu_1_outgoing_burstcount
	wire  [31:0] mm_interconnect_0_sysid_qsys_0_control_slave_readdata; // sysid_qsys_0:readdata -> mm_interconnect_0:sysid_qsys_0_control_slave_readdata
	wire   [0:0] mm_interconnect_0_sysid_qsys_0_control_slave_address;  // mm_interconnect_0:sysid_qsys_0_control_slave_address -> sysid_qsys_0:address
	wire         mm_interconnect_0_sdram_controller_s1_chipselect;      // mm_interconnect_0:sdram_controller_s1_chipselect -> sdram_controller:az_cs
	wire  [15:0] mm_interconnect_0_sdram_controller_s1_readdata;        // sdram_controller:za_data -> mm_interconnect_0:sdram_controller_s1_readdata
	wire         mm_interconnect_0_sdram_controller_s1_waitrequest;     // sdram_controller:za_waitrequest -> mm_interconnect_0:sdram_controller_s1_waitrequest
	wire  [24:0] mm_interconnect_0_sdram_controller_s1_address;         // mm_interconnect_0:sdram_controller_s1_address -> sdram_controller:az_addr
	wire         mm_interconnect_0_sdram_controller_s1_read;            // mm_interconnect_0:sdram_controller_s1_read -> sdram_controller:az_rd_n
	wire   [1:0] mm_interconnect_0_sdram_controller_s1_byteenable;      // mm_interconnect_0:sdram_controller_s1_byteenable -> sdram_controller:az_be_n
	wire         mm_interconnect_0_sdram_controller_s1_readdatavalid;   // sdram_controller:za_valid -> mm_interconnect_0:sdram_controller_s1_readdatavalid
	wire         mm_interconnect_0_sdram_controller_s1_write;           // mm_interconnect_0:sdram_controller_s1_write -> sdram_controller:az_wr_n
	wire  [15:0] mm_interconnect_0_sdram_controller_s1_writedata;       // mm_interconnect_0:sdram_controller_s1_writedata -> sdram_controller:az_data
	wire         mm_interconnect_0_pio_0_s1_chipselect;                 // mm_interconnect_0:pio_0_s1_chipselect -> pio_0:chipselect
	wire  [31:0] mm_interconnect_0_pio_0_s1_readdata;                   // pio_0:readdata -> mm_interconnect_0:pio_0_s1_readdata
	wire   [1:0] mm_interconnect_0_pio_0_s1_address;                    // mm_interconnect_0:pio_0_s1_address -> pio_0:address
	wire         mm_interconnect_0_pio_0_s1_write;                      // mm_interconnect_0:pio_0_s1_write -> pio_0:write_n
	wire  [31:0] mm_interconnect_0_pio_0_s1_writedata;                  // mm_interconnect_0:pio_0_s1_writedata -> pio_0:writedata
	wire         mm_interconnect_0_mutex_0_s1_chipselect;               // mm_interconnect_0:mutex_0_s1_chipselect -> mutex_0:chipselect
	wire  [31:0] mm_interconnect_0_mutex_0_s1_readdata;                 // mutex_0:data_to_cpu -> mm_interconnect_0:mutex_0_s1_readdata
	wire   [0:0] mm_interconnect_0_mutex_0_s1_address;                  // mm_interconnect_0:mutex_0_s1_address -> mutex_0:address
	wire         mm_interconnect_0_mutex_0_s1_read;                     // mm_interconnect_0:mutex_0_s1_read -> mutex_0:read
	wire         mm_interconnect_0_mutex_0_s1_write;                    // mm_interconnect_0:mutex_0_s1_write -> mutex_0:write
	wire  [31:0] mm_interconnect_0_mutex_0_s1_writedata;                // mm_interconnect_0:mutex_0_s1_writedata -> mutex_0:data_from_cpu
	wire         rst_controller_reset_out_reset;                        // rst_controller:reset_out -> [mm_interconnect_0:CPU_0_0_reset_reset_bridge_in_reset_reset, mm_interconnect_0:sysid_qsys_0_reset_reset_bridge_in_reset_reset, mutex_0:reset_n, pio_0:reset_n, sysid_qsys_0:reset_n]
	wire         rst_controller_001_reset_out_reset;                    // rst_controller_001:reset_out -> [mm_interconnect_0:sdram_controller_reset_reset_bridge_in_reset_reset, sdram_controller:reset_n]

	main_system_CPU_0_0 cpu_0_0 (
		.clk_clk                      (pll_0_outclk0_clk),                    //            clk.clk
		.cpu_0_outgoing_waitrequest   (cpu_0_0_cpu_0_outgoing_waitrequest),   // cpu_0_outgoing.waitrequest
		.cpu_0_outgoing_readdata      (cpu_0_0_cpu_0_outgoing_readdata),      //               .readdata
		.cpu_0_outgoing_readdatavalid (cpu_0_0_cpu_0_outgoing_readdatavalid), //               .readdatavalid
		.cpu_0_outgoing_burstcount    (cpu_0_0_cpu_0_outgoing_burstcount),    //               .burstcount
		.cpu_0_outgoing_writedata     (cpu_0_0_cpu_0_outgoing_writedata),     //               .writedata
		.cpu_0_outgoing_address       (cpu_0_0_cpu_0_outgoing_address),       //               .address
		.cpu_0_outgoing_write         (cpu_0_0_cpu_0_outgoing_write),         //               .write
		.cpu_0_outgoing_read          (cpu_0_0_cpu_0_outgoing_read),          //               .read
		.cpu_0_outgoing_byteenable    (cpu_0_0_cpu_0_outgoing_byteenable),    //               .byteenable
		.cpu_0_outgoing_debugaccess   (cpu_0_0_cpu_0_outgoing_debugaccess),   //               .debugaccess
		.reset_reset_n                (reset_reset_n)                         //          reset.reset_n
	);

	main_system_CPU_1_0 cpu_1_0 (
		.clk_clk                      (pll_0_outclk0_clk),                    //            clk.clk
		.cpu_1_outgoing_waitrequest   (cpu_1_0_cpu_1_outgoing_waitrequest),   // cpu_1_outgoing.waitrequest
		.cpu_1_outgoing_readdata      (cpu_1_0_cpu_1_outgoing_readdata),      //               .readdata
		.cpu_1_outgoing_readdatavalid (cpu_1_0_cpu_1_outgoing_readdatavalid), //               .readdatavalid
		.cpu_1_outgoing_burstcount    (cpu_1_0_cpu_1_outgoing_burstcount),    //               .burstcount
		.cpu_1_outgoing_writedata     (cpu_1_0_cpu_1_outgoing_writedata),     //               .writedata
		.cpu_1_outgoing_address       (cpu_1_0_cpu_1_outgoing_address),       //               .address
		.cpu_1_outgoing_write         (cpu_1_0_cpu_1_outgoing_write),         //               .write
		.cpu_1_outgoing_read          (cpu_1_0_cpu_1_outgoing_read),          //               .read
		.cpu_1_outgoing_byteenable    (cpu_1_0_cpu_1_outgoing_byteenable),    //               .byteenable
		.cpu_1_outgoing_debugaccess   (cpu_1_0_cpu_1_outgoing_debugaccess),   //               .debugaccess
		.reset_reset_n                (reset_reset_n)                         //          reset.reset_n
	);

	main_system_mutex_0 mutex_0 (
		.reset_n       (~rst_controller_reset_out_reset),         // reset.reset_n
		.clk           (pll_0_outclk0_clk),                       //   clk.clk
		.chipselect    (mm_interconnect_0_mutex_0_s1_chipselect), //    s1.chipselect
		.data_from_cpu (mm_interconnect_0_mutex_0_s1_writedata),  //      .writedata
		.read          (mm_interconnect_0_mutex_0_s1_read),       //      .read
		.write         (mm_interconnect_0_mutex_0_s1_write),      //      .write
		.data_to_cpu   (mm_interconnect_0_mutex_0_s1_readdata),   //      .readdata
		.address       (mm_interconnect_0_mutex_0_s1_address)     //      .address
	);

	main_system_pio_0 pio_0 (
		.clk        (pll_0_outclk0_clk),                     //                 clk.clk
		.reset_n    (~rst_controller_reset_out_reset),       //               reset.reset_n
		.address    (mm_interconnect_0_pio_0_s1_address),    //                  s1.address
		.write_n    (~mm_interconnect_0_pio_0_s1_write),     //                    .write_n
		.writedata  (mm_interconnect_0_pio_0_s1_writedata),  //                    .writedata
		.chipselect (mm_interconnect_0_pio_0_s1_chipselect), //                    .chipselect
		.readdata   (mm_interconnect_0_pio_0_s1_readdata),   //                    .readdata
		.out_port   (parallel_port_leds_export)              // external_connection.export
	);

	main_system_pll_0 pll_0 (
		.refclk   (clk_clk),           //  refclk.clk
		.rst      (~reset_reset_n),    //   reset.reset
		.outclk_0 (pll_0_outclk0_clk), // outclk0.clk
		.outclk_1 (pll_0_outclk1_clk), // outclk1.clk
		.outclk_2 (pll_clk_sdram_clk), // outclk2.clk
		.locked   ()                   // (terminated)
	);

	main_system_sdram_controller sdram_controller (
		.clk            (pll_0_outclk1_clk),                                   //   clk.clk
		.reset_n        (~rst_controller_001_reset_out_reset),                 // reset.reset_n
		.az_addr        (mm_interconnect_0_sdram_controller_s1_address),       //    s1.address
		.az_be_n        (~mm_interconnect_0_sdram_controller_s1_byteenable),   //      .byteenable_n
		.az_cs          (mm_interconnect_0_sdram_controller_s1_chipselect),    //      .chipselect
		.az_data        (mm_interconnect_0_sdram_controller_s1_writedata),     //      .writedata
		.az_rd_n        (~mm_interconnect_0_sdram_controller_s1_read),         //      .read_n
		.az_wr_n        (~mm_interconnect_0_sdram_controller_s1_write),        //      .write_n
		.za_data        (mm_interconnect_0_sdram_controller_s1_readdata),      //      .readdata
		.za_valid       (mm_interconnect_0_sdram_controller_s1_readdatavalid), //      .readdatavalid
		.za_waitrequest (mm_interconnect_0_sdram_controller_s1_waitrequest),   //      .waitrequest
		.zs_addr        (sdram_controller_wire_addr),                          //  wire.export
		.zs_ba          (sdram_controller_wire_ba),                            //      .export
		.zs_cas_n       (sdram_controller_wire_cas_n),                         //      .export
		.zs_cke         (sdram_controller_wire_cke),                           //      .export
		.zs_cs_n        (sdram_controller_wire_cs_n),                          //      .export
		.zs_dq          (sdram_controller_wire_dq),                            //      .export
		.zs_dqm         (sdram_controller_wire_dqm),                           //      .export
		.zs_ras_n       (sdram_controller_wire_ras_n),                         //      .export
		.zs_we_n        (sdram_controller_wire_we_n)                           //      .export
	);

	main_system_sysid_qsys_0 sysid_qsys_0 (
		.clock    (pll_0_outclk0_clk),                                     //           clk.clk
		.reset_n  (~rst_controller_reset_out_reset),                       //         reset.reset_n
		.readdata (mm_interconnect_0_sysid_qsys_0_control_slave_readdata), // control_slave.readdata
		.address  (mm_interconnect_0_sysid_qsys_0_control_slave_address)   //              .address
	);

	main_system_mm_interconnect_0 mm_interconnect_0 (
		.pll_0_outclk0_clk                                  (pll_0_outclk0_clk),                                     //                                pll_0_outclk0.clk
		.pll_0_outclk1_clk                                  (pll_0_outclk1_clk),                                     //                                pll_0_outclk1.clk
		.CPU_0_0_reset_reset_bridge_in_reset_reset          (rst_controller_reset_out_reset),                        //          CPU_0_0_reset_reset_bridge_in_reset.reset
		.sdram_controller_reset_reset_bridge_in_reset_reset (rst_controller_001_reset_out_reset),                    // sdram_controller_reset_reset_bridge_in_reset.reset
		.sysid_qsys_0_reset_reset_bridge_in_reset_reset     (rst_controller_reset_out_reset),                        //     sysid_qsys_0_reset_reset_bridge_in_reset.reset
		.CPU_0_0_cpu_0_outgoing_address                     (cpu_0_0_cpu_0_outgoing_address),                        //                       CPU_0_0_cpu_0_outgoing.address
		.CPU_0_0_cpu_0_outgoing_waitrequest                 (cpu_0_0_cpu_0_outgoing_waitrequest),                    //                                             .waitrequest
		.CPU_0_0_cpu_0_outgoing_burstcount                  (cpu_0_0_cpu_0_outgoing_burstcount),                     //                                             .burstcount
		.CPU_0_0_cpu_0_outgoing_byteenable                  (cpu_0_0_cpu_0_outgoing_byteenable),                     //                                             .byteenable
		.CPU_0_0_cpu_0_outgoing_read                        (cpu_0_0_cpu_0_outgoing_read),                           //                                             .read
		.CPU_0_0_cpu_0_outgoing_readdata                    (cpu_0_0_cpu_0_outgoing_readdata),                       //                                             .readdata
		.CPU_0_0_cpu_0_outgoing_readdatavalid               (cpu_0_0_cpu_0_outgoing_readdatavalid),                  //                                             .readdatavalid
		.CPU_0_0_cpu_0_outgoing_write                       (cpu_0_0_cpu_0_outgoing_write),                          //                                             .write
		.CPU_0_0_cpu_0_outgoing_writedata                   (cpu_0_0_cpu_0_outgoing_writedata),                      //                                             .writedata
		.CPU_0_0_cpu_0_outgoing_debugaccess                 (cpu_0_0_cpu_0_outgoing_debugaccess),                    //                                             .debugaccess
		.CPU_1_0_cpu_1_outgoing_address                     (cpu_1_0_cpu_1_outgoing_address),                        //                       CPU_1_0_cpu_1_outgoing.address
		.CPU_1_0_cpu_1_outgoing_waitrequest                 (cpu_1_0_cpu_1_outgoing_waitrequest),                    //                                             .waitrequest
		.CPU_1_0_cpu_1_outgoing_burstcount                  (cpu_1_0_cpu_1_outgoing_burstcount),                     //                                             .burstcount
		.CPU_1_0_cpu_1_outgoing_byteenable                  (cpu_1_0_cpu_1_outgoing_byteenable),                     //                                             .byteenable
		.CPU_1_0_cpu_1_outgoing_read                        (cpu_1_0_cpu_1_outgoing_read),                           //                                             .read
		.CPU_1_0_cpu_1_outgoing_readdata                    (cpu_1_0_cpu_1_outgoing_readdata),                       //                                             .readdata
		.CPU_1_0_cpu_1_outgoing_readdatavalid               (cpu_1_0_cpu_1_outgoing_readdatavalid),                  //                                             .readdatavalid
		.CPU_1_0_cpu_1_outgoing_write                       (cpu_1_0_cpu_1_outgoing_write),                          //                                             .write
		.CPU_1_0_cpu_1_outgoing_writedata                   (cpu_1_0_cpu_1_outgoing_writedata),                      //                                             .writedata
		.CPU_1_0_cpu_1_outgoing_debugaccess                 (cpu_1_0_cpu_1_outgoing_debugaccess),                    //                                             .debugaccess
		.mutex_0_s1_address                                 (mm_interconnect_0_mutex_0_s1_address),                  //                                   mutex_0_s1.address
		.mutex_0_s1_write                                   (mm_interconnect_0_mutex_0_s1_write),                    //                                             .write
		.mutex_0_s1_read                                    (mm_interconnect_0_mutex_0_s1_read),                     //                                             .read
		.mutex_0_s1_readdata                                (mm_interconnect_0_mutex_0_s1_readdata),                 //                                             .readdata
		.mutex_0_s1_writedata                               (mm_interconnect_0_mutex_0_s1_writedata),                //                                             .writedata
		.mutex_0_s1_chipselect                              (mm_interconnect_0_mutex_0_s1_chipselect),               //                                             .chipselect
		.pio_0_s1_address                                   (mm_interconnect_0_pio_0_s1_address),                    //                                     pio_0_s1.address
		.pio_0_s1_write                                     (mm_interconnect_0_pio_0_s1_write),                      //                                             .write
		.pio_0_s1_readdata                                  (mm_interconnect_0_pio_0_s1_readdata),                   //                                             .readdata
		.pio_0_s1_writedata                                 (mm_interconnect_0_pio_0_s1_writedata),                  //                                             .writedata
		.pio_0_s1_chipselect                                (mm_interconnect_0_pio_0_s1_chipselect),                 //                                             .chipselect
		.sdram_controller_s1_address                        (mm_interconnect_0_sdram_controller_s1_address),         //                          sdram_controller_s1.address
		.sdram_controller_s1_write                          (mm_interconnect_0_sdram_controller_s1_write),           //                                             .write
		.sdram_controller_s1_read                           (mm_interconnect_0_sdram_controller_s1_read),            //                                             .read
		.sdram_controller_s1_readdata                       (mm_interconnect_0_sdram_controller_s1_readdata),        //                                             .readdata
		.sdram_controller_s1_writedata                      (mm_interconnect_0_sdram_controller_s1_writedata),       //                                             .writedata
		.sdram_controller_s1_byteenable                     (mm_interconnect_0_sdram_controller_s1_byteenable),      //                                             .byteenable
		.sdram_controller_s1_readdatavalid                  (mm_interconnect_0_sdram_controller_s1_readdatavalid),   //                                             .readdatavalid
		.sdram_controller_s1_waitrequest                    (mm_interconnect_0_sdram_controller_s1_waitrequest),     //                                             .waitrequest
		.sdram_controller_s1_chipselect                     (mm_interconnect_0_sdram_controller_s1_chipselect),      //                                             .chipselect
		.sysid_qsys_0_control_slave_address                 (mm_interconnect_0_sysid_qsys_0_control_slave_address),  //                   sysid_qsys_0_control_slave.address
		.sysid_qsys_0_control_slave_readdata                (mm_interconnect_0_sysid_qsys_0_control_slave_readdata)  //                                             .readdata
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller (
		.reset_in0      (~reset_reset_n),                 // reset_in0.reset
		.clk            (pll_0_outclk0_clk),              //       clk.clk
		.reset_out      (rst_controller_reset_out_reset), // reset_out.reset
		.reset_req      (),                               // (terminated)
		.reset_req_in0  (1'b0),                           // (terminated)
		.reset_in1      (1'b0),                           // (terminated)
		.reset_req_in1  (1'b0),                           // (terminated)
		.reset_in2      (1'b0),                           // (terminated)
		.reset_req_in2  (1'b0),                           // (terminated)
		.reset_in3      (1'b0),                           // (terminated)
		.reset_req_in3  (1'b0),                           // (terminated)
		.reset_in4      (1'b0),                           // (terminated)
		.reset_req_in4  (1'b0),                           // (terminated)
		.reset_in5      (1'b0),                           // (terminated)
		.reset_req_in5  (1'b0),                           // (terminated)
		.reset_in6      (1'b0),                           // (terminated)
		.reset_req_in6  (1'b0),                           // (terminated)
		.reset_in7      (1'b0),                           // (terminated)
		.reset_req_in7  (1'b0),                           // (terminated)
		.reset_in8      (1'b0),                           // (terminated)
		.reset_req_in8  (1'b0),                           // (terminated)
		.reset_in9      (1'b0),                           // (terminated)
		.reset_req_in9  (1'b0),                           // (terminated)
		.reset_in10     (1'b0),                           // (terminated)
		.reset_req_in10 (1'b0),                           // (terminated)
		.reset_in11     (1'b0),                           // (terminated)
		.reset_req_in11 (1'b0),                           // (terminated)
		.reset_in12     (1'b0),                           // (terminated)
		.reset_req_in12 (1'b0),                           // (terminated)
		.reset_in13     (1'b0),                           // (terminated)
		.reset_req_in13 (1'b0),                           // (terminated)
		.reset_in14     (1'b0),                           // (terminated)
		.reset_req_in14 (1'b0),                           // (terminated)
		.reset_in15     (1'b0),                           // (terminated)
		.reset_req_in15 (1'b0)                            // (terminated)
	);

	altera_reset_controller #(
		.NUM_RESET_INPUTS          (1),
		.OUTPUT_RESET_SYNC_EDGES   ("deassert"),
		.SYNC_DEPTH                (2),
		.RESET_REQUEST_PRESENT     (0),
		.RESET_REQ_WAIT_TIME       (1),
		.MIN_RST_ASSERTION_TIME    (3),
		.RESET_REQ_EARLY_DSRT_TIME (1),
		.USE_RESET_REQUEST_IN0     (0),
		.USE_RESET_REQUEST_IN1     (0),
		.USE_RESET_REQUEST_IN2     (0),
		.USE_RESET_REQUEST_IN3     (0),
		.USE_RESET_REQUEST_IN4     (0),
		.USE_RESET_REQUEST_IN5     (0),
		.USE_RESET_REQUEST_IN6     (0),
		.USE_RESET_REQUEST_IN7     (0),
		.USE_RESET_REQUEST_IN8     (0),
		.USE_RESET_REQUEST_IN9     (0),
		.USE_RESET_REQUEST_IN10    (0),
		.USE_RESET_REQUEST_IN11    (0),
		.USE_RESET_REQUEST_IN12    (0),
		.USE_RESET_REQUEST_IN13    (0),
		.USE_RESET_REQUEST_IN14    (0),
		.USE_RESET_REQUEST_IN15    (0),
		.ADAPT_RESET_REQUEST       (0)
	) rst_controller_001 (
		.reset_in0      (~reset_reset_n),                     // reset_in0.reset
		.clk            (pll_0_outclk1_clk),                  //       clk.clk
		.reset_out      (rst_controller_001_reset_out_reset), // reset_out.reset
		.reset_req      (),                                   // (terminated)
		.reset_req_in0  (1'b0),                               // (terminated)
		.reset_in1      (1'b0),                               // (terminated)
		.reset_req_in1  (1'b0),                               // (terminated)
		.reset_in2      (1'b0),                               // (terminated)
		.reset_req_in2  (1'b0),                               // (terminated)
		.reset_in3      (1'b0),                               // (terminated)
		.reset_req_in3  (1'b0),                               // (terminated)
		.reset_in4      (1'b0),                               // (terminated)
		.reset_req_in4  (1'b0),                               // (terminated)
		.reset_in5      (1'b0),                               // (terminated)
		.reset_req_in5  (1'b0),                               // (terminated)
		.reset_in6      (1'b0),                               // (terminated)
		.reset_req_in6  (1'b0),                               // (terminated)
		.reset_in7      (1'b0),                               // (terminated)
		.reset_req_in7  (1'b0),                               // (terminated)
		.reset_in8      (1'b0),                               // (terminated)
		.reset_req_in8  (1'b0),                               // (terminated)
		.reset_in9      (1'b0),                               // (terminated)
		.reset_req_in9  (1'b0),                               // (terminated)
		.reset_in10     (1'b0),                               // (terminated)
		.reset_req_in10 (1'b0),                               // (terminated)
		.reset_in11     (1'b0),                               // (terminated)
		.reset_req_in11 (1'b0),                               // (terminated)
		.reset_in12     (1'b0),                               // (terminated)
		.reset_req_in12 (1'b0),                               // (terminated)
		.reset_in13     (1'b0),                               // (terminated)
		.reset_req_in13 (1'b0),                               // (terminated)
		.reset_in14     (1'b0),                               // (terminated)
		.reset_req_in14 (1'b0),                               // (terminated)
		.reset_in15     (1'b0),                               // (terminated)
		.reset_req_in15 (1'b0)                                // (terminated)
	);

endmodule
